# -*- coding: utf-8 -*-
"""spambase-01.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1HeE_Fv_rbxMLuy3S-b4OH2CdDdUAL9UJ
"""

!pip install ucimlrepo

import pandas as pd
from ucimlrepo import fetch_ucirepo
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report

spambase = fetch_ucirepo(id=94)

# Data (as pandas dataframes)
X = spambase.data.features
y = spambase.data.targets

# Combine features and target for easier exploration
df = pd.concat([X, y], axis=1)

df.info()

# test_size=0.2 means 20% of the data will be for testing
# random_state=42 ensures we get the same split every time we run the code
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

scaler = StandardScaler()

# Fit the scaler on the training data and transform it
X_train_scaled = scaler.fit_transform(X_train)

# Only transform the test data using the scaler fitted on the training data
X_test_scaled = scaler.transform(X_test)

# Create the model
model = LogisticRegression()

# Train the model
model.fit(X_train_scaled, y_train.values.ravel()) # .values.ravel() flattens the target array

y_pred = model.predict(X_test_scaled)

accuracy = accuracy_score(y_test, y_pred)
print(f"Accuracy: {accuracy * 100:.2f}%")

print("\nConfusion Matrix:")
print(confusion_matrix(y_test, y_pred))

print("\nClassification Report:")
print(classification_report(y_test, y_pred))